{"version":3,"sources":["components/Phonebook.module.css","components/Title/MainTitle/MainTitle.module.css","components/Contacts/ContactListItem/ContactListItem.module.css","components/Contacts/ContactList/ContactList.module.css","components/Contacts/transitions/slide.module.css","components/Contacts/AddContact/AddContact.module.css","components/Alet/Alert.module.css","components/Contacts/transitions/alert.module.css","components/Contacts/FindContact/FindContact.module.css","components/Contacts/transitions/pop.module.css","components/Contacts/transitions/slideTitle.module.css","components/Title/MainTitle/MainTitle.js","components/Contacts/ContactListItem/ContactListItem.js","redux/contacts/contactsSelectors.js","redux/contacts/contactsActions.js","redux/contacts/contactsOperations.js","components/Contacts/ContactList/ContactList.js","components/Alet/Alert.js","redux/status/statusSelectors.js","redux/status/statusActions.js","components/Contacts/AddContact/AddContact.js","components/Contacts/FindContact/FindContact.js","components/Phonebook.js","App.js","redux/contacts/contactsReducer.js","redux/status/statusReducer.js","redux/store.js","index.js"],"names":["module","exports","MainTitle","className","styles","mainTitle","ContactListItem","contact","removeItem","data-id","id","contactListItem","name","number","type","onClick","getContactsItems","state","contacts","items","getContactsFilter","filter","addContactsRequest","createAction","addContactsSuccess","addContactsError","getContactsRequest","getContactsSuccess","getContactsError","removeContactsRequest","removeContactsSuccess","removeContactsError","getFilterValue","e","payload","target","value","axios","defaults","baseURL","mapDispatchToProps","dispatch","delete","then","catch","error","connect","length","toLowerCase","includes","filteredContact","TransitionGroup","component","contactList","map","CSSTransition","key","timeout","classNames","slideTransition","Alert","alert","getStatusIson","status","inOn","getStatusExist","exist","statusInOn","statusExist","AddContact","handleInputValue","el","inputValue","dataset","setState","handleSubmit","props","addNewItem","preventDefault","replace","l","toUpperCase","find","element","setTimeout","this","contactForm","onSubmit","htmlFor","data-type","placeholder","onChange","variant","in","alertTransition","unmountOnExit","React","Component","post","data","findContainet","Phonebook","getItem","maineContainer","subContainer","slideTitleTransition","popTransition","get","App","contactsReducer","createReducer","action","item","statusReducer","store","configureStore","reducer","middleware","getDefaultMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5ed3ee6c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"maineContainer\":\"Phonebook_maineContainer__3nu2h\",\"subContainer\":\"Phonebook_subContainer__hzCvb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainTitle\":\"MainTitle_mainTitle__3j5vD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactListItem\":\"ContactListItem_contactListItem__1Wj2O\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__3mONS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"slide_enter__1OCTA\",\"enterActive\":\"slide_enterActive__3xoFR\",\"exit\":\"slide_exit__1vt0v\",\"exitActive\":\"slide_exitActive__xb5NG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactForm\":\"AddContact_contactForm__37S8H\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"alert\":\"Alert_alert__36qC5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"alert_enter__31gVG\",\"enterActive\":\"alert_enterActive__1f2F8\",\"exit\":\"alert_exit__2FHJc\",\"exitActive\":\"alert_exitActive__3LDtY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"findContainet\":\"FindContact_findContainet__38Rmo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"pop_enter__10OMH\",\"enterActive\":\"pop_enterActive__1bchL\",\"exit\":\"pop_exit__ZdVG4\",\"exitActive\":\"pop_exitActive__nPmtB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"slideTitle_enter__3PC1T\",\"enterActive\":\"slideTitle_enterActive__4Z_Mj\"};","import React from \"react\";\r\nimport styles from \"./MainTitle.module.css\";\r\n\r\nconst MainTitle = () => {\r\n  return <h1 className={styles.mainTitle}>Телефонна книга</h1>;\r\n};\r\n\r\nexport default MainTitle;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./ContactListItem.module.css\";\r\n\r\nconst ContactListItem = ({ contact, removeItem }) => {\r\n  return (\r\n    <li data-id={contact.id} className={styles.contactListItem}>\r\n      <h4>{contact.name}:</h4>\r\n      <h4>{contact.number}</h4>\r\n      <button\r\n        type=\"button\"\r\n        id={contact.id}\r\n        onClick={() => removeItem(contact.id)}\r\n      >\r\n        x\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default ContactListItem;\r\n\r\nContactListItem.propTypes = {\r\n  contact: PropTypes.object,\r\n};\r\n","const getContactsItems = (state) => state.contacts.items;\r\nconst getContactsFilter = (state) => state.contacts.filter;\r\n\r\nexport { getContactsItems, getContactsFilter };\r\n","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nconst addContactsRequest = createAction(\"contacts/addRequest\");\r\nconst addContactsSuccess = createAction(\"contacts/addSuccess\");\r\nconst addContactsError = createAction(\"contacts/addError\");\r\n\r\nconst getContactsRequest = createAction(\"contacts/getRequest\");\r\nconst getContactsSuccess = createAction(\"contacts/getSuccess\");\r\nconst getContactsError = createAction(\"contacts/getError\");\r\n\r\nconst removeContactsRequest = createAction(\"contacts/removeRequest\");\r\nconst removeContactsSuccess = createAction(\"contacts/removeSuccess\");\r\nconst removeContactsError = createAction(\"contacts/removeError\");\r\n\r\nconst getFilterValue = createAction(\"FILTER_ITEM\", function prepare(e) {\r\n  const string = e.target.value;\r\n  return {\r\n    payload: string,\r\n  };\r\n});\r\n\r\nexport {\r\n  addContactsRequest,\r\n  addContactsSuccess,\r\n  addContactsError,\r\n  getContactsRequest,\r\n  getContactsSuccess,\r\n  getContactsError,\r\n  removeContactsRequest,\r\n  removeContactsSuccess,\r\n  removeContactsError,\r\n  getFilterValue,\r\n};\r\n","import {\r\n  addContactsRequest,\r\n  addContactsSuccess,\r\n  addContactsError,\r\n  getContactsRequest,\r\n  getContactsSuccess,\r\n  getContactsError,\r\n  removeContactsRequest,\r\n  removeContactsSuccess,\r\n  removeContactsError,\r\n} from \"./contactsActions\";\r\nimport axios from \"axios\";\r\n\r\naxios.defaults.baseURL = \"http://localhost:2000\";\r\n\r\nconst addNewItem = (contact) => (dispatch) => {\r\n  dispatch(addContactsRequest());\r\n  axios\r\n    .post(\"/contacts\", { ...contact })\r\n    .then(({ data }) => {\r\n      dispatch(addContactsSuccess({ ...data }));\r\n    })\r\n    .catch((error) => dispatch(addContactsError(error)));\r\n};\r\n\r\nconst getItem = () => (dispatch) => {\r\n  dispatch(getContactsRequest());\r\n  axios\r\n    .get(\"/contacts\")\r\n    .then(({ data }) => {\r\n      dispatch(getContactsSuccess([...data]));\r\n    })\r\n    .catch((error) => dispatch(getContactsError(error)));\r\n};\r\n\r\nconst removeItem = (id) => (dispatch) => {\r\n  dispatch(removeContactsRequest());\r\n  axios\r\n    .delete(`/contacts/${id}`)\r\n    .then(() => {\r\n      dispatch(removeContactsSuccess(id));\r\n    })\r\n    .catch((error) => dispatch(removeContactsError(error)));\r\n};\r\n\r\nexport { addNewItem, getItem, removeItem };\r\n","import React from \"react\";\r\nimport ContactListItem from \"../ContactListItem/ContactListItem\";\r\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\r\nimport styles from \"./ContactList.module.css\";\r\nimport slideTransition from \"../transitions/slide.module.css\";\r\nimport {\r\n  getContactsItems,\r\n  getContactsFilter,\r\n} from \"../../../redux/contacts/contactsSelectors\";\r\nimport { removeItem } from \"../../../redux/contacts/contactsOperations\";\r\nimport { connect } from \"react-redux\";\r\n\r\nfunction filteredContact(items, filter) {\r\n  if (filter.length !== 0) {\r\n    return items.filter((contact) =>\r\n      contact.name.toLowerCase().includes(filter.toLowerCase())\r\n    );\r\n  } else {\r\n    return items;\r\n  }\r\n}\r\n\r\nconst ContactList = ({ items, filter = \"\", removeItem }) => {\r\n  const contacts = filteredContact(items, filter);\r\n  return (\r\n    <TransitionGroup component=\"ul\" className={styles.contactList}>\r\n      {contacts.map((contact) => (\r\n        <CSSTransition\r\n          key={contact.id}\r\n          timeout={250}\r\n          classNames={slideTransition}\r\n        >\r\n          <ContactListItem\r\n            removeItem={removeItem}\r\n            contact={contact}\r\n            key={items.id}\r\n          />\r\n        </CSSTransition>\r\n      ))}\r\n    </TransitionGroup>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    items: getContactsItems(state),\r\n    filter: getContactsFilter(state),\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  removeItem,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n","import React from \"react\";\r\nimport styles from \"./Alert.module.css\";\r\n\r\nconst Alert = () => {\r\n  return (\r\n    <div className={styles.alert}>\r\n      <p>Контакт з таким іменем вже існує</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Alert;\r\n","const getStatusIson = (state) => state.status.inOn;\r\nconst getStatusExist = (state) => state.status.exist;\r\n\r\nexport { getStatusIson, getStatusExist };","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nconst statusInOn = createAction(\"CHENGE_STATUS_ISON\");\r\nconst statusExist = createAction(\"CHENGE_STATUS_EXIST\");\r\n\r\nexport { statusInOn, statusExist };\r\n","import React from \"react\";\r\nimport styles from \"./AddContact.module.css\";\r\nimport Alert from \"../../Alet/Alert\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport alertTransition from \"../../Contacts/transitions/alert.module.css\";\r\nimport { getContactsItems } from \"../../../redux/contacts/contactsSelectors\";\r\nimport { getStatusExist } from \"../../../redux/status/statusSelectors\";\r\nimport { connect } from \"react-redux\";\r\nimport { addNewItem } from \"../../../redux/contacts/contactsOperations\";\r\nimport { statusExist } from \"../../../redux/status/statusActions\";\r\n\r\nclass AddContact extends React.Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  handleInputValue = (el) => {\r\n    const inputValue = el.target.dataset.type;\r\n    this.setState({\r\n      [inputValue]: el.target.value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = (el) => {\r\n    const { statusExist, addNewItem } = this.props;\r\n    el.preventDefault();\r\n    const contact = {\r\n      name: this.state.name.replace(/\\b\\w/g, (l) => l.toUpperCase()),\r\n      number: this.state.number,\r\n    };\r\n    if (\r\n      this.props.items.find(\r\n        (element) => element.name.toLowerCase() === contact.name.toLowerCase()\r\n      )\r\n    ) {\r\n      statusExist(true);\r\n      return setTimeout(() => {\r\n        statusExist(false);\r\n      }, 2000);\r\n    } else {\r\n      addNewItem(contact);\r\n    }\r\n    this.setState({\r\n      name: \"\",\r\n      number: \"\",\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    const { exist } = this.props;\r\n    return (\r\n      <form className={styles.contactForm} onSubmit={this.handleSubmit}>\r\n        <label htmlFor=\"contactName\">Ім'я</label>\r\n        <input\r\n          id=\"contactName\"\r\n          type=\"text\"\r\n          data-type=\"name\"\r\n          value={name}\r\n          placeholder=\"Введіть Ваше Ім'я\"\r\n          onChange={this.handleInputValue}\r\n        />\r\n        <br />\r\n        <label htmlFor=\"contactNumber\">Номер</label>\r\n        <input\r\n          id=\"contactNumber\"\r\n          type=\"text\"\r\n          data-type=\"number\"\r\n          value={number}\r\n          placeholder=\"Введіть Ваш номер\"\r\n          onChange={this.handleInputValue}\r\n        />\r\n        <br />\r\n        <button variant=\"outlined\" type=\"submit\">\r\n          Додати контакт\r\n        </button>\r\n        <CSSTransition\r\n          in={exist}\r\n          timeout={250}\r\n          classNames={alertTransition}\r\n          unmountOnExit\r\n        >\r\n          <Alert />\r\n        </CSSTransition>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    items: getContactsItems(state),\r\n    exist: getStatusExist(state),\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  addNewItem,\r\n  statusExist,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddContact);\r\n","import React from \"react\";\r\nimport styles from \"./FindContact.module.css\";\r\nimport { getFilterValue } from \"../../../redux/contacts/contactsActions\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst FindContact = ({ getFilterValue }) => {\r\n  return (\r\n    <div className={styles.findContainet}>\r\n      <label htmlFor=\"findContact\">Введіть ім'я для пошуку</label>\r\n      <input id=\"findContact\" type=\"text\" onChange={getFilterValue} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => state;\r\n\r\nconst mapDispatchToProps = {\r\n  getFilterValue,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FindContact);\r\n","import React from \"react\";\r\nimport MainTitle from \"./Title/MainTitle/MainTitle\";\r\nimport ContactList from \"./Contacts/ContactList/ContactList\";\r\nimport AddContact from \"./Contacts/AddContact/AddContact\";\r\nimport FindContact from \"./Contacts/FindContact/FindContact\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport popTransition from \"./Contacts/transitions/pop.module.css\";\r\nimport slideTitleTransition from \"./Contacts/transitions/slideTitle.module.css\";\r\nimport styles from \"./Phonebook.module.css\";\r\nimport { connect } from \"react-redux\";\r\nimport { getItem } from \"../redux/contacts/contactsOperations\";\r\nimport { statusInOn } from \"../redux/status/statusActions\";\r\nimport { getContactsItems } from \"../redux/contacts/contactsSelectors\";\r\nimport { getStatusIson } from \"../redux/status/statusSelectors\";\r\n\r\nclass Phonebook extends React.Component {\r\n  componentDidMount() {\r\n    this.props.getItem();\r\n  }\r\n  render() {\r\n    this.props.statusInOn(true);\r\n    const { items, inOn } = this.props;\r\n    return (\r\n      <div className={styles.maineContainer}>\r\n        <div className={styles.subContainer}>\r\n          <CSSTransition\r\n            in={inOn}\r\n            timeout={500}\r\n            classNames={slideTitleTransition}\r\n            unmountOnExit\r\n          >\r\n            <MainTitle />\r\n          </CSSTransition>\r\n          <AddContact />\r\n          <CSSTransition\r\n            in={items.length > 1}\r\n            timeout={250}\r\n            classNames={popTransition}\r\n            unmountOnExit\r\n          >\r\n            <FindContact />\r\n          </CSSTransition>\r\n          <ContactList />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    items: getContactsItems(state),\r\n    inOn: getStatusIson(state),\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  getItem,\r\n  statusInOn,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Phonebook);\r\n","import React from \"react\";\nimport Phonebook from \"./components/Phonebook\";\n\nconst App = () => {\n  return <Phonebook />;\n};\n\nexport default App;\n","import { createReducer } from \"@reduxjs/toolkit\";\r\nimport {\r\n  getFilterValue,\r\n  addContactsSuccess,\r\n  getContactsSuccess,\r\n  removeContactsSuccess,\r\n} from \"../contacts/contactsActions\";\r\n\r\nconst contactsReducer = createReducer(\r\n  { items: [], filter: \"\" },\r\n  {\r\n    [getContactsSuccess]: (state, action) => ({ items: action.payload }),\r\n    [addContactsSuccess]: (state, action) => ({\r\n      ...state,\r\n      items: [...state.items, action.payload],\r\n    }),\r\n    [removeContactsSuccess]: (state, action) => ({\r\n      ...state,\r\n      items: [\r\n        ...state.items.filter((item) => {\r\n          return item.id !== action.payload;\r\n        }),\r\n      ],\r\n    }),\r\n    [getFilterValue]: (state, action) => ({ ...state, filter: action.payload }),\r\n  }\r\n);\r\n\r\nexport default contactsReducer;\r\n","import { createReducer } from \"@reduxjs/toolkit\";\r\nimport { statusInOn, statusExist } from \"../status/statusActions\";\r\n\r\nconst statusReducer = createReducer(\r\n  { inOn: false, exist: false },\r\n  {\r\n    [statusInOn]: (state, action) => ({\r\n      ...state,\r\n      inOn: action.payload,\r\n    }),\r\n    [statusExist]: (state, action) => ({\r\n      ...state,\r\n      exist: action.payload,\r\n    }),\r\n  }\r\n);\r\n\r\nexport default statusReducer;\r\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\nimport contactsReducer from \"./contacts/contactsReducer\";\r\nimport statusReducer from \"./status/statusReducer\";\r\n// import logger from \"redux-logger\";\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: contactsReducer,\r\n    status: statusReducer,\r\n  },\r\n  middleware: [...getDefaultMiddleware()],\r\n});\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}